# Credit to https://github.com/RDambrosio016 for providing me with a template for this GitHub Action

name: Rust

on:
  push:
  pull_request:

env:
  RUST_LOG: info
  RUST_BACKTRACE: 1

jobs:
  clippy:
    name: Clippy
    runs-on: ubuntu-latest

    env:
      RUSTFLAGS: -Dwarnings

    steps:
      - uses: actions/checkout@v2
      - uses: hecrj/setup-rust-action@v1
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v1
      - run: cargo clippy --all-targets --verbose --all-features

  rustfmt:
    name: Formatting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: hecrj/setup-rust-action@v1
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check

  deploy:
    name: Deploy for ${{ matrix.os }}
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: parallel
            asset_name: parallel-linux
          - os: windows-latest
            artifact_name: parallel.exe
            asset_name: parallel-windows
          - os: macos-latest
            artifact_name: parallel
            asset_name: parallel-macos

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Build
        run: cargo build --release

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
